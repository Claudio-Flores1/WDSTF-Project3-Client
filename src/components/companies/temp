            <div className="show-review-container">
                <h1 className="text-center mt-5 mb-4">{review.company.name}</h1>
                <img className="logo-review-show mt-3 mb-5" alt="logo" src={review.company.logo}></img>
                <h2 className="text-center review-title">{ review.title }</h2>
                <div className="review-card">
                    <div className="review-info d-flex">
                        <section className="review-section-1">
                            {/* conditionally rendered username because seed reviews have no owner */}
                            <section className="review-index-section">
                                <div className="rating-item label">User:</div> 
                                {review.owner ? <div className="rating-item">{ review.owner?.username }</div> : null }
                            </section>

                            <div className="rating-item">{ fiveStars(review.generalRating) }</div>
                            <section className="review-index-section">
                                <div className="rating-item label">Salary:</div> 
                                <div>{ salaryUSD }</div>
                            </section>
                            <section className="review-index-section">
                                <div className="rating-item label">Starting Position:</div> 
                                <div>{ review.startingPosition }</div>
                            </section>
                            <div className="rating-item"> </div>
                        </section>
                        <section className="review-section-2">
                            <div className="review-text">{ review.content }</div>
                        </section>
                    </div>

                    {/* display dates posted and edited, but only both if actually edited */}
                    <small>posted {review.createdAt.split("T")[0]}</small>                    
                    {review.createdAt !== review.updatedAt && 
                    <>
                        <br/>
                        <small style={{color: "red"}}>edited {review.updatedAt.split("T")[0]}</small>
                    </>}
                    <br/>
                    {/* display likes */}
                    {review.userLikes.length > 0 && (
                        review.userLikes.length === 1 ?                            
                            <small>1 like</small>
                        :
                            <small>{review.userLikes.length} likes</small>
                    )}
                    
                    <div className="review-btns">
                        <section className="revew-btns-1">
                        {user && (user._id === review.owner?._id) ?
                                <div >
                                    <button className='company-button' onClick={() => setDisplayUpdate(true)}>Edit Review</button>
                                    {isDeleteClicked ? <button className="company-button" onClick={deleteReview}>I'm sure, DELETE</button> : <button className='company-button' onClick={() => setIsDeleteClicked(true)}>Delete Review</button>}
                                </div>
                            : null}
                        </section>
                                {/* only signed-in users can comment or like */}
                        <section className="revew-btns-2">
                            {user ?
                                <section>
                                {/* hollow thumb icon for like becomes solid icon for unlike */}
                                    {review.userLikes.includes(user._id) ?
                                        <p style={{color: "rgb(38,173,204)", cursor: "pointer", margin: "0px 10px 10px 20px"}} onClick={unLikeReview}><img style={{height: "25px"}} alt="unlike" src={require('../../icons/thumbs-up.png')}/> unlike</p>
                                        :
                                        <p style={{cursor: "pointer", margin: "0px 10px 10px 20px"}} onClick={likeReview}><img style={{height: "25px"}} alt="like" src={require('../../icons/blackHollowThumb.png')}/> like</p>
                                    }

                                    <button className="comment-like-btn" onClick={() => toggleCommentForm()}>Comment</button>
                                </section>                    
                            : null}
                        </section>
                    </div>

                </div>
            </div>

            {displayCommentForm ?
                <CommentCreate
                    user={user}
                    review = {review}
                    msgAlert = {msgAlert}
                    triggerRefresh={triggerRefresh}
                    closeComment={() => setDisplayCommentForm(false)}
                />
            : null}

            <div>{ comments ? comments : null}</div>
            <ReviewUpdateModal
                currentReview={review}
                company={review.company}
                msgAlert={msgAlert}
                showUpdate={displayUpdate}
                closeUpdate={() => setDisplayUpdate(false)}
                triggerRefresh={triggerRefresh}
                user={user}
                reviewId={reviewId}
            />